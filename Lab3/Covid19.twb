<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='NumberOfCases' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
        <calculation class='tableau' formula='5000.0' />
        <range granularity='100.0' max='83836.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='covid19Data (2)' inline='true' name='federated.0b0ur7c12vzric1a42eko0ti7pvr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid19Data (2)' name='textscan.1brgbz10psj7bt1bqj68f097f78p'>
            <connection class='textscan' directory='/Users/juliannamurphy/Downloads' filename='covid19Data (2).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1brgbz10psj7bt1bqj68f097f78p' name='covid19Data (2).csv' table='[covid19Data (2)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='date' name='dates' ordinal='1' />
            <column datatype='integer' name='cases' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid19Data (2).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid19Data (2).csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dates</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dates]</local-name>
            <parent-name>[covid19Data (2).csv]</parent-name>
            <remote-alias>dates</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[covid19Data (2).csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dates' datatype='date' name='[dates]' role='dimension' type='ordinal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='{fixed [country] :Max(cases)} &gt; [Parameters].[Parameter 1]' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.270718' group-percentage='0.191529' measure-ordering='alphabetic' measure-percentage='0.344383' parameter-percentage='0.19337' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='NumberOfCases' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
          <calculation class='tableau' formula='5000.0' />
          <range granularity='100.0' max='83836.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 1' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country' />
        <param name='target' value='Sheet 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19Data (2)' name='federated.0b0ur7c12vzric1a42eko0ti7pvr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='NumberOfCases' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <range granularity='100.0' max='83836.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0b0ur7c12vzric1a42eko0ti7pvr'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Dates' datatype='date' name='[dates]' role='dimension' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dates]' derivation='Day-Trunc' name='[tdy:dates:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dates]' derivation='Day-Trunc' name='[tdy:dates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b0ur7c12vzric1a42eko0ti7pvr].[Set 1]' />
          <slices>
            <column>[federated.0b0ur7c12vzric1a42eko0ti7pvr].[Set 1]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0b0ur7c12vzric1a42eko0ti7pvr].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0b0ur7c12vzric1a42eko0ti7pvr].[sum:cases:qk]</rows>
        <cols>[federated.0b0ur7c12vzric1a42eko0ti7pvr].[tdy:dates:qk]</cols>
        <pages>
          <column>[federated.0b0ur7c12vzric1a42eko0ti7pvr].[tdy:dates:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' />
      </table>
      <simple-id uuid='{1D06328C-70B3-42B7-97B4-0E90C0074848}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0b0ur7c12vzric1a42eko0ti7pvr].[none:country:nk]' type='color' />
            <card looped='1' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-01-22 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0b0ur7c12vzric1a42eko0ti7pvr].[Set 1]</field>
            <field>[federated.0b0ur7c12vzric1a42eko0ti7pvr].[yr:dates:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B71F1CA2-1691-4289-9375-CEF7E29BF5C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
